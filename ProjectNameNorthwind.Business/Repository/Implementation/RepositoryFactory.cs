/*************************************************************
** Class generated by CodeTrigger, Version 6.1.0.7
** This class was generated on 5/6/2019 1:07:04 PM
** Changes to this file may cause incorrect behaviour and will be lost if the code is regenerated
**************************************************************/
using System;
using System.Linq;
using System.Collections.Generic;
using ProjectNameNorthwind.Data;
using ProjectNameNorthwind.Data.Interfaces;
using ProjectNameNorthwind.Business.Repository.Interfaces;

namespace ProjectNameNorthwind.Business.Repository
{
	public partial class RF
	{
		private IConnectionProvider _connectionProvider;
		private IList<object> _repositories;
		
		public static RF New()
		{
			return new RF();
		}
		
		private RF()
		{
			_connectionProvider = new ConnectionProvider();
			_repositories = new List<object>();
		}
	}

	public partial class RF
	{
		public ICustomerRepository CustomerRepository
		{
			get
			{
				ICustomerRepository repo = (ICustomerRepository)_repositories.SingleOrDefault((x) => x is ICustomerRepository);
				if(repo == null)
				{
					repo = new CustomerRepository();
					repo.ConnectionProvider = _connectionProvider;
					_repositories.Add(repo);
				}
				return repo;
			}
		}
	}
		

	public partial class RF
	{
		public IOrderRepository OrderRepository
		{
			get
			{
				IOrderRepository repo = (IOrderRepository)_repositories.SingleOrDefault((x) => x is IOrderRepository);
				if(repo == null)
				{
					repo = new OrderRepository();
					repo.ConnectionProvider = _connectionProvider;
					_repositories.Add(repo);
				}
				return repo;
			}
		}
	}
		

	public partial class RF
	{
		public IOrderItemRepository OrderItemRepository
		{
			get
			{
				IOrderItemRepository repo = (IOrderItemRepository)_repositories.SingleOrDefault((x) => x is IOrderItemRepository);
				if(repo == null)
				{
					repo = new OrderItemRepository();
					repo.ConnectionProvider = _connectionProvider;
					_repositories.Add(repo);
				}
				return repo;
			}
		}
	}
		

	public partial class RF
	{
		public IProductRepository ProductRepository
		{
			get
			{
				IProductRepository repo = (IProductRepository)_repositories.SingleOrDefault((x) => x is IProductRepository);
				if(repo == null)
				{
					repo = new ProductRepository();
					repo.ConnectionProvider = _connectionProvider;
					_repositories.Add(repo);
				}
				return repo;
			}
		}
	}
		

	public partial class RF
	{
		public ISupplierRepository SupplierRepository
		{
			get
			{
				ISupplierRepository repo = (ISupplierRepository)_repositories.SingleOrDefault((x) => x is ISupplierRepository);
				if(repo == null)
				{
					repo = new SupplierRepository();
					repo.ConnectionProvider = _connectionProvider;
					_repositories.Add(repo);
				}
				return repo;
			}
		}
	}
		
}
